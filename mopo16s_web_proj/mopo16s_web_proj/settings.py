"""
Django settings for mopo16s_web_proj project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from decouple import config


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3pmgl=%504ff78*q-ogts#yvza+xr6%aq2)@f@afm$*k_p1n@d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# mopo16s configurations
MOPO16S_VERSION = '1.0'
MOPO16S_PATH = '/home/gasta/mopo16s/release/mopo16s'
MOPO16S_MAX_THREADS = os.cpu_count() - 1 or 1
MOPO16S_MAX_THREADS_PER_INSTANCE = os.cpu_count() // 2 or 1
MOPO16S_PARAMETERS = dict(
        seed=dict(type=int, default=0, description="Seed of the random number generator (default 0)."),
        restarts=dict(type=int, default=20, min=0,
                      description="Number of restarts of the multi-objective optimisation algorithm (default 20)."),
        runs=dict(type=int, default=20, min=1,
                  description="Number of runs of the multi-objective optimisation algorithm (default 20)."),
        threads=dict(type=int, default=1, max=MOPO16S_MAX_THREADS, min=1,
                     description="Number of threads for parallel execution (default 1, max {}).".format(
                             MOPO16S_MAX_THREADS)),
        verbose=dict(type=int, default=0, max=3, min=0,
                     description="Verbosity level (default 0). If 0, no extra output would be created. If not 0, "
                                 "for each run would be created 3 files: 1) primers scores file 2) primers sequences "
                                 "file 3) optimization steps performed at each restart."),
        maxMismatches=dict(type=int, default=2, min=0,
                           description="Maximum number of mismatches between the non-3'-end of the primer and a 16S "
                                       "sequence to consider the latter covered by the primer, in case also the "
                                       "3'-end perfectly matches (default 2)."),
        maxALenSpanC=dict(type=int, default=200, min=0,
                          description="Maximum amplicon length span considered when computing coverage (half above, "
                                      "half below median) (default 200)."),
        minPrimerLen=dict(type=int, default=17, min=0, description="Minimum primer length (default 17)."),
        maxPrimerLen=dict(type=int, default=21, min=0, description="Maximum primer length (default 21)."),
        minTm=dict(type=int, default=52, min=0, description="Minimum primer melting temperature (default 52)."),
        minGCCont=dict(type=float, default=0.5, min=0, description="Minimum primer GC content (default 0.5)."),
        maxGCCont=dict(type=float, default=0.7, min=0, description="Maximum primer GC content (default 0.7)."),
        maxDimers=dict(type=int, default=8, min=0,
                       description="Maximum number of self-dimers, ie of dimers between all possible gap-less "
                                   "alignments of the primer with its reverse complement (default 8)."),
        maxDimersInt=dict(type=int, default=3, min=0,
                          description="Fuzzy tolerance interval for maximum number of self dimers (default 3)."),
        maxHomopLen=dict(type=int, default=4, min=0, description="Maximum homopolymer length (default 4)."),
        maxHLenInt=dict(type=int, default=2, min=0,
                        description="Fuzzy tolerance interval for maximum homopolymer length (default 2)."),
        maxDeltaTm=dict(type=int, default=3, min=0,
                        description="Maximum span of melting temperatures for the primer sets (default 3)."),
        deltaTmInt=dict(type=int, default=2, min=0, description="Fuzzy tolerance interval for span of melting "
                                                                "temperatures of the primer set (default 2)."),
        maxALenSpanE=dict(type=int, default=50, min=0, description="Maximum span between median and given quantile ("
                                                                   "maxALenSpanEQ) of amplicon length (default 50)."),
        maxALenSpanEQ=dict(type=float, default=0.01, min=0, description="Quantile of amplicon length (default 0.01)."),
        maxALenSpanEI=dict(type=int, default=50, min=0,
                           description="Fuzzy tolerance interval for maximum span between median and given quantile "
                                       "amplicon length (default 50)."),
        minTmInterv=dict(type=int, default=2, min=0,
                         description="Fuzzy tolerance interval for minimum melting temperature (default 2)."),
        minGCContInt=dict(type=float, default=0.1, min=0,
                          description="Fuzzy tolerance interval for minimum GC content (default 0.1)."),
        )

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'rest_framework',
    'widget_tweaks',
    'django_celery_beat',
    'django_celery_results',
    'mopo16s_web',
    'accounts',
    'api',
    'web_interface',
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
    ]

ROOT_URLCONF = 'mopo16s_web_proj.urls'

TEMPLATES = [
    {
        'BACKEND':  'django.template.backends.django.DjangoTemplates',
        'DIRS':     [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS':  {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

WSGI_APPLICATION = 'mopo16s_web_proj.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':   'django.db.backends.postgresql',
        'NAME':     'mopo16s_web_db',
        'USER':     'django_pg',
        'PASSWORD': 'django_pwd',
        'HOST':     '192.168.1.46',
        'PORT':     '5432',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'accounts.User'
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Rome'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    ]

MEDIA_ROOT = '/home/gasta/mopo16s_web_media'

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'mopo16S.Webapp@gmail.com'
EMAIL_HOST_PASSWORD = 'tesi@gasta19'
DEFAULT_FROM_EMAIL = 'mopo16S Webapp <mopo16S.Webapp@gmail.com>'
EMAIL_SUBJECT_PREFIX = '[mopo16S Webapp] '

CSP_DEFAULT_SRC = ("'none'",)
# TODO: remove 'unsafe-inline' and check 'nonce' working instead
CSP_STYLE_SRC = (
    "'self'", "fonts.googleapis.com", "stackpath.bootstrapcdn.com", "cdn.datatables.net", "'unsafe-inline'")
CSP_SCRIPT_SRC = ("'self'", "cdn.jsdelivr.net", "code.jquery.com", "stackpath.bootstrapcdn.com", "cdnjs.cloudflare.com",
                  "cdn.datatables.net", "'unsafe-eval'", "'unsafe-inline'")
CSP_IMG_SRC = ("'self'", "i.creativecommons.org", "licensebuttons.net")
CSP_FONT_SRC = ("'self'", "fonts.gstatic.com")

CSP_CONNECT_SRC = ("'self'", "cdn.jsdelivr.net")

SESSION_COOKIE_SAMESITE = 'Strict'
